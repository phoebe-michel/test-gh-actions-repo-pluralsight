name: build-test-deploy
# Note: Jobs are independent so steps are scoped locally and need to be repeated for every job

on: push
jobs:

# Build an app
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout repos
        uses: actions/checkout@v4
      - name: use node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm install
      - run: npm run build

  # Test the app
  test:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout repos
        uses: actions/checkout@v4
      - name: use node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm install
      - run: npm test

  deploy:
    needs: test

    # define permissions to determine what our workflow is allowed to do
    permissions:
      contents: write
      pages: write
      id-token: write

    # define our deployment environment 
    # pinpoint our environment as our deployment destination by passing 'name' of environment and 'url' of deployment to the environment
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }} #snags url from the final deployment step

    runs-on: ubuntu-latest

    steps:
      - name: checkout repo (with authentication)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: use node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: configure github pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
      - run: npm install
      - run: npm run build
      - name: upload artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: './out'
      - name: deploy
        id: deployment
        uses: actions/deploy-pages@v4
